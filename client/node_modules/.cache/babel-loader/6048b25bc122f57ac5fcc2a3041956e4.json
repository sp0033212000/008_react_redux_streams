{"ast":null,"code":"var _jsxFileName = \"/Users/liaojiwei/github/008_react_redux_streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/index';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        className: \"ui active inverted dimmer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui text loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.stream.title);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.stream[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/liaojiwei/github/008_react_redux_streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAuB;AACnB,aACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAKH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAAxB,CADJ;AAGH;;AAhBoC;;AAiBxC;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHJ,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaI,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/index';\n\nclass StreamShow extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    render() {\n        if(!this.props.stream) {\n            return (\n                <div className=\"ui active inverted dimmer\">\n                    <div className=\"ui text loader\">Loading</div>\n                </div>\n            )\n        }\n        \n        return (\n            <div>{this.props.stream.title}</div>\n        );\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.stream[ownProps.match.params.id]\n    };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}