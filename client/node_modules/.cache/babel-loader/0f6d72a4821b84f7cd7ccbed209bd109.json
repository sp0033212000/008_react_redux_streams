{"ast":null,"code":"var _jsxFileName = \"/Users/liaojiwei/github/008_react_redux_streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport { fetchStream, editStream } from '../../actions/index';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        className: \"ui active inverted dimmer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui text loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n\n    if (this.props.currentUserId !== this.props.stream.userId) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"USER ID DOES NOT MATCH!\"), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        onClick: () => history.push('/'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"OK\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Edit a Stream\"), React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id],\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/liaojiwei/github/008_react_redux_streams/client/src/components/streams/StreamEdit.js"],"names":["React","_","connect","history","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","stream","currentUserId","userId","push","pick","mapStateToProps","state","ownProps","streams","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,qBAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAKzBC,UAAD,IAAgB;AACvB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACH,KAPoC;AAAA;;AACrCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDE,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAuB;AACnB,aACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAKH;;AAED,QAAG,KAAKN,KAAL,CAAWO,aAAX,KAA6B,KAAKP,KAAL,CAAWM,MAAX,CAAkBE,MAAlD,EAA0D;AACtD,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAII;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,MAAMhB,OAAO,CAACiB,IAAR,CAAa,GAAb,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ;AAQH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,UAAD;AACI,MAAA,aAAa,EAAEnB,CAAC,CAACoB,IAAF,CAAO,KAAKV,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADnB;AAEI,MAAA,QAAQ,EAAE,KAAKR,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AAtCoC;;AAuCxC;;AAED,MAAMa,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBC,EAApC,CADL;AAEHI,IAAAA,aAAa,EAAEK,KAAK,CAACG,IAAN,CAAWP;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAejB,OAAO,CAACoB,eAAD,EAAkB;AAAElB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport history from '../../history';\nimport { fetchStream, editStream } from '../../actions/index';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n        this.props.editStream(this.props.match.params.id, formValues)\n    }\n\n    render() {\n        if(!this.props.stream) {\n            return (\n                <div className=\"ui active inverted dimmer\">\n                    <div className=\"ui text loader\">Loading</div>\n                </div>\n            )\n        }\n\n        if(this.props.currentUserId !== this.props.stream.userId) {\n            return (\n                <div className=\"container\">\n                    <div className=\"title\">\n                        USER ID DOES NOT MATCH!\n                    </div>\n                    <button className=\"ui button primary\" onClick={() => history.push('/')}>OK</button>\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm\n                    initialValues={_.pick(this.props.stream, 'title', 'description')}\n                    onSubmit={this.onSubmit}\n                />\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id],\n        currentUserId: state.auth.userId\n    };\n}\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}