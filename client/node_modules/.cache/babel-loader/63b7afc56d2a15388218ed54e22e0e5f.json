{"ast":null,"code":"import streams from '../api/streams';\nimport * as actionType from './action.types';\nexport const signIn = userId => {\n  return {\n    type: actionType.SIGN_IN,\n    payload: {\n      userId\n    }\n  };\n};\nexport const signOut = () => {\n  return {\n    type: actionType.SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const res = await streams.post('/streams', formValues);\n    dispatch({\n      type: actionType.CREATE_STREAM,\n      payload: res.data\n    });\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const res = await streams.get('/streams');\n    dispatch({\n      type: actionType.FETCH_STREAMS,\n      payload: res.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const res = await streams.get(`/stream/${id}`);\n    dispatch({\n      type: actionType.FETCH_STREAM,\n      payload: res.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const res = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n      type: actionType.EDIT_STREAM,\n      payload: res.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n      type: actionType.DELETE_STREAM,\n      payload: id\n    });\n  };\n};","map":{"version":3,"sources":["/Users/liaojiwei/github/008_react_redux_streams/client/src/actions/index.js"],"names":["streams","actionType","signIn","userId","type","SIGN_IN","payload","signOut","SIGN_OUT","createStream","formValues","dispatch","getState","auth","res","post","CREATE_STREAM","data","fetchStreams","get","FETCH_STREAMS","fetchStream","id","FETCH_STREAM","editStream","put","EDIT_STREAM","deleteStream","delete","DELETE_STREAM"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAO,KAAKC,UAAZ,MAA4B,gBAA5B;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEH,UAAU,CAACI,OADd;AAEHC,IAAAA,OAAO,EAAE;AACLH,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMI,OAAO,GAAG,MAAM;AACzB,SAAO;AACHH,IAAAA,IAAI,EAAEH,UAAU,CAACO;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AACxC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,UACzBT,MADyB,GACdS,QAAQ,GAAGC,IADG,CACzBV,MADyB;AAEjC,UAAMW,GAAG,GAAG,MAAMd,OAAO,CAACe,IAAR,CAAa,UAAb,EAAyBL,UAAzB,CAAlB;AACAC,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACe,aADZ;AAELV,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAOP,QAAP,IAAoB;AACvB,UAAMG,GAAG,GAAG,MAAMd,OAAO,CAACmB,GAAR,CAAY,UAAZ,CAAlB;AACAR,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACmB,aADZ;AAELd,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ;AAC/B,SAAO,MAAOX,QAAP,IAAoB;AACvB,UAAMG,GAAG,GAAG,MAAMd,OAAO,CAACmB,GAAR,CAAa,WAAUG,EAAG,EAA1B,CAAlB;AACAX,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACsB,YADZ;AAELjB,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMO,UAAU,GAAG,CAACF,EAAD,EAAKZ,UAAL,KAAoB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMG,GAAG,GAAG,MAAMd,OAAO,CAACyB,GAAR,CAAa,YAAWH,EAAG,EAA3B,EAA8BZ,UAA9B,CAAlB;AACAC,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACyB,WADZ;AAELpB,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMU,YAAY,GAAIL,EAAD,IAAQ;AAChC,SAAO,MAAOX,QAAP,IAAoB;AACvB,UAAMX,OAAO,CAAC4B,MAAR,CAAgB,YAAWN,EAAG,EAA9B,CAAN;AACAX,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAAC4B,aADZ;AAELvB,MAAAA,OAAO,EAAEgB;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM","sourcesContent":["import streams from '../api/streams';\nimport * as actionType from './action.types';\n\nexport const signIn = (userId) => {\n    return {\n        type: actionType.SIGN_IN,\n        payload: {\n            userId\n        }\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: actionType.SIGN_OUT\n    };\n};\n\nexport const createStream = (formValues) => {\n    return async (dispatch, getState) => {\n        const { userId } = getState().auth;\n        const res = await streams.post('/streams', formValues);\n        dispatch({\n            type: actionType.CREATE_STREAM,\n            payload: res.data\n        })\n    };\n};\n\nexport const fetchStreams = () => {\n    return async (dispatch) => {\n        const res = await streams.get('/streams');\n        dispatch({\n            type: actionType.FETCH_STREAMS,\n            payload: res.data\n        })\n    };\n};\n\nexport const fetchStream = (id) => {\n    return async (dispatch) => {\n        const res = await streams.get(`/stream/${id}`);\n        dispatch({\n            type: actionType.FETCH_STREAM,\n            payload: res.data\n        })\n    };\n};\n\nexport const editStream = (id, formValues) => {\n    return async (dispatch) => {\n        const res = await streams.put(`/streams/${id}`, formValues);\n        dispatch({\n            type: actionType.EDIT_STREAM,\n            payload: res.data\n        })\n    };\n};\n\nexport const deleteStream = (id) => {\n    return async (dispatch) => {\n        await streams.delete(`/streams/${id}`);\n        dispatch({\n            type: actionType.DELETE_STREAM,\n            payload: id\n        })\n    };\n};"]},"metadata":{},"sourceType":"module"}