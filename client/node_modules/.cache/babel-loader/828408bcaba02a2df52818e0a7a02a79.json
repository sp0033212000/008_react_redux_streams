{"ast":null,"code":"import _objectSpread from \"/Users/liaojiwei/github/008_react_redux_streams/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport streams from '../api/streams';\nimport history from '../history';\nimport * as actionType from './action.types';\nexport const signIn = userId => {\n  return {\n    type: actionType.SIGN_IN,\n    payload: {\n      userId\n    }\n  };\n};\nexport const signOut = () => {\n  return {\n    type: actionType.SIGN_OUT\n  };\n};\nexport const createStream = formValues => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const res = await streams.post('/streams', _objectSpread({}, formValues, {\n      userId\n    }));\n    dispatch({\n      type: actionType.CREATE_STREAM,\n      payload: res.data\n    });\n    history.push('/');\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const res = await streams.get('/streams');\n    dispatch({\n      type: actionType.FETCH_STREAMS,\n      payload: res.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const res = await streams.get(`/streams/${id}`);\n    dispatch({\n      type: actionType.FETCH_STREAM,\n      payload: res.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const res = await streams.patch(`/streams/${id}`, formValues);\n    dispatch({\n      type: actionType.EDIT_STREAM,\n      payload: res.data\n    });\n    history.push('/');\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n      type: actionType.DELETE_STREAM,\n      payload: id\n    });\n    history.push('/');\n  };\n};","map":{"version":3,"sources":["/Users/liaojiwei/github/008_react_redux_streams/client/src/actions/index.js"],"names":["streams","history","actionType","signIn","userId","type","SIGN_IN","payload","signOut","SIGN_OUT","createStream","formValues","dispatch","getState","auth","res","post","CREATE_STREAM","data","push","fetchStreams","get","FETCH_STREAMS","fetchStream","id","FETCH_STREAM","editStream","patch","EDIT_STREAM","deleteStream","delete","DELETE_STREAM"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,KAAKC,UAAZ,MAA4B,gBAA5B;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEH,UAAU,CAACI,OADd;AAEHC,IAAAA,OAAO,EAAE;AACLH,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMI,OAAO,GAAG,MAAM;AACzB,SAAO;AACHH,IAAAA,IAAI,EAAEH,UAAU,CAACO;AADd,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AACxC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,UACzBT,MADyB,GACdS,QAAQ,GAAGC,IADG,CACzBV,MADyB;AAEjC,UAAMW,GAAG,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAa,UAAb,oBAA8BL,UAA9B;AAA0CP,MAAAA;AAA1C,OAAlB;AACAQ,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACe,aADZ;AAELV,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIAjB,IAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH,GARD;AASH,CAVM;AAYP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAOR,QAAP,IAAoB;AACvB,UAAMG,GAAG,GAAG,MAAMf,OAAO,CAACqB,GAAR,CAAY,UAAZ,CAAlB;AACAT,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACoB,aADZ;AAELf,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMK,WAAW,GAAIC,EAAD,IAAQ;AAC/B,SAAO,MAAOZ,QAAP,IAAoB;AACvB,UAAMG,GAAG,GAAG,MAAMf,OAAO,CAACqB,GAAR,CAAa,YAAWG,EAAG,EAA3B,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAACuB,YADZ;AAELlB,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMQ,UAAU,GAAG,CAACF,EAAD,EAAKb,UAAL,KAAoB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMG,GAAG,GAAG,MAAMf,OAAO,CAAC2B,KAAR,CAAe,YAAWH,EAAG,EAA7B,EAAgCb,UAAhC,CAAlB;AACAC,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAAC0B,WADZ;AAELrB,MAAAA,OAAO,EAAEQ,GAAG,CAACG;AAFR,KAAD,CAAR;AAIAjB,IAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMU,YAAY,GAAIL,EAAD,IAAQ;AAChC,SAAO,MAAOZ,QAAP,IAAoB;AACvB,UAAMZ,OAAO,CAAC8B,MAAR,CAAgB,YAAWN,EAAG,EAA9B,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,UAAU,CAAC6B,aADZ;AAELxB,MAAAA,OAAO,EAAEiB;AAFJ,KAAD,CAAR;AAIAvB,IAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH,GAPD;AAQH,CATM","sourcesContent":["import streams from '../api/streams';\nimport history from '../history';\nimport * as actionType from './action.types';\n\nexport const signIn = (userId) => {\n    return {\n        type: actionType.SIGN_IN,\n        payload: {\n            userId\n        }\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: actionType.SIGN_OUT\n    };\n};\n\nexport const createStream = (formValues) => {\n    return async (dispatch, getState) => {\n        const { userId } = getState().auth;\n        const res = await streams.post('/streams', { ...formValues, userId });\n        dispatch({\n            type: actionType.CREATE_STREAM,\n            payload: res.data\n        })\n        history.push('/');\n    };\n};\n\nexport const fetchStreams = () => {\n    return async (dispatch) => {\n        const res = await streams.get('/streams');\n        dispatch({\n            type: actionType.FETCH_STREAMS,\n            payload: res.data\n        })\n    };\n};\n\nexport const fetchStream = (id) => {\n    return async (dispatch) => {\n        const res = await streams.get(`/streams/${id}`);\n        dispatch({\n            type: actionType.FETCH_STREAM,\n            payload: res.data\n        })\n    };\n};\n\nexport const editStream = (id, formValues) => {\n    return async (dispatch) => {\n        const res = await streams.patch(`/streams/${id}`, formValues);\n        dispatch({\n            type: actionType.EDIT_STREAM,\n            payload: res.data\n        })\n        history.push('/');\n    };\n};\n\nexport const deleteStream = (id) => {\n    return async (dispatch) => {\n        await streams.delete(`/streams/${id}`);\n        dispatch({\n            type: actionType.DELETE_STREAM,\n            payload: id\n        })\n        history.push('/');\n    };\n};"]},"metadata":{},"sourceType":"module"}