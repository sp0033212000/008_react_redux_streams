{"ast":null,"code":"var _jsxFileName = \"/Users/liaojiwei/github/008_react_redux_streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions/index';\n\nclass StreamDelete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderActions = () => {\n      const id = this.props.match.params.id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.props.deleteStream(id),\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Cancel\"));\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        className: \"ui active inverted dimmer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui text loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n\n    if (this.props.stream) {\n      if (this.props.currentUserId !== this.props.stream.userId) {\n        return React.createElement(\"div\", {\n          className: \"ui placeholder segment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui icon header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"USER ID DOES NOT MATCH!\"), React.createElement(\"button\", {\n          className: \"ui button primary\",\n          onClick: () => history.push('/'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"OK\"));\n      }\n    }\n\n    return React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: `Are you sure you want to delete this stream with title: ${this.props.stream.title}`,\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id],\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/liaojiwei/github/008_react_redux_streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","deleteStream","StreamDelete","Component","renderActions","id","props","match","params","componentDidMount","render","stream","currentUserId","userId","push","title","mapStateToProps","state","ownProps","streams","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,qBAA1C;;AAEA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAKvCC,aALuC,GAKvB,MAAM;AAAA,YACVC,EADU,GACH,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADd,CACVH,EADU;AAElB,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWL,YAAX,CAAwBI,EAAxB,CAAvB;AAAoD,QAAA,SAAS,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH,KAbsC;AAAA;;AACvCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACH;;AAYDK,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAuB;AACnB,aACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAKH;;AAED,QAAG,KAAKL,KAAL,CAAWK,MAAd,EAAsB;AAClB,UAAG,KAAKL,KAAL,CAAWM,aAAX,KAA6B,KAAKN,KAAL,CAAWK,MAAX,CAAkBE,MAAlD,EAA0D;AACtD,eACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAII;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAE,MAAMd,OAAO,CAACe,IAAR,CAAa,GAAb,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAQH;AACJ;;AAED,WACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,eADV;AAEI,MAAA,OAAO,EAAG,2DAA0D,KAAKR,KAAL,CAAWK,MAAX,CAAkBI,KAAM,EAFhG;AAGI,MAAA,OAAO,EAAE,KAAKX,aAAL,EAHb;AAII,MAAA,SAAS,EAAE,MAAML,OAAO,CAACe,IAAR,CAAa,GAAb,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AA7CsC;;AA8C1C;;AAED,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBH,EAApC,CADL;AAEHO,IAAAA,aAAa,EAAEK,KAAK,CAACG,IAAN,CAAWP;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAejB,OAAO,CAACoB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDC,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions/index';\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions = () => {\n        const { id } = this.props.match.params;\n        return (\n            <React.Fragment>\n                <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        if(!this.props.stream) {\n            return (\n                <div className=\"ui active inverted dimmer\">\n                    <div className=\"ui text loader\">Loading</div>\n                </div>\n            )\n        }\n\n        if(this.props.stream) {\n            if(this.props.currentUserId !== this.props.stream.userId) {\n                return (\n                    <div className=\"ui placeholder segment\">\n                        <div className=\"ui icon header\">\n                            USER ID DOES NOT MATCH!\n                        </div>\n                        <button className=\"ui button primary\" onClick={() => history.push('/')}>OK</button>\n                    </div>\n                )\n            }\n        }\n\n        return (\n            <Modal\n                title=\"Delete Stream\"\n                content={`Are you sure you want to delete this stream with title: ${this.props.stream.title}`}\n                actions={this.renderActions()}\n                onDismiss={() => history.push('/')}\n            />\n        );\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id],\n        currentUserId: state.auth.userId\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}